# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.8

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/tmconsulting/zabroniryiru-sdk

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go get github.com/jstemmer/go-junit-report

      # specify any bash command here prefixed with `run: `
      #- run: go get -v -t -d ./...

      - run:
        name: Run unit tests
        #environment:
        #  CONTACTS_DB_URL: "postgres://root@localhost:5432/circle_test?sslmode=disable"
        #  CONTACTS_DB_MIGRATIONS: /go/src/github.com/CircleCI-Public/circleci-demo-go/db/migrations
        command: |
          trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
          make test | tee ${TEST_RESULTS}/go-test.out

      #- run: go test -v ./...

      - store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results